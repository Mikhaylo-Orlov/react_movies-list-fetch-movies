{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","loading","setLoading","_useState5","_useState6","hasError","setHasError","_useState7","_useState8","setMovie","_Fragment","onSubmit","event","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","data","viewPoster","Poster","Title","Plot","imdbID","finally","htmlFor","value","onChange","target","type","id","placeholder","classNames","disabled","onClick","App","setMovies","currentMovies","find","currentMovie","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96a4901b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const defaultPicture\n    = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setLoading(true);\n    setHasError(false);\n\n    getMovie(query)\n      .then((data: MovieData | ResponseError) => {\n        if ('Error' in data) {\n          setHasError(true);\n          setMovie(null);\n        } else {\n          const viewPoster\n            = data.Poster === 'N/A' ? defaultPicture : data.Poster;\n\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: viewPoster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          });\n        }\n      })\n\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      onAddMovie(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              value={query}\n              onChange={handleQueryChange}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': hasError },\n              )}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': loading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5f79d9b4&';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((currentMovies: Movie[]) => {\n      if (currentMovies.find(\n        (currentMovie) => currentMovie.imdbId === movie.imdbId,\n      )) {\n        return currentMovies;\n      }\n\n      return [...currentMovies, movie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}